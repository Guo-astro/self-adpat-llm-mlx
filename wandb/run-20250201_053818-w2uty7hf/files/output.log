╭─────────────── Model Information ────────────────╮
│ Training a Transformer with 240.486 M Parameters │
╰──────────────────────────────────────────────────╯
Traceback (most recent call last):
  File "/Users/guo/OSS/self-adpat-llm-mlx/main.py", line 295, in <module>
    main(args)
  File "/Users/guo/OSS/self-adpat-llm-mlx/main.py", line 133, in main
    loss = step(inputs, targets)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/main.py", line 108, in step
    loss, grads = loss_and_grad_fn(model, inputs, targets)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/.venv/lib/python3.12/site-packages/mlx/nn/utils.py", line 35, in wrapped_value_grad_fn
    value, grad = value_grad_fn(model.trainable_parameters(), *args, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/.venv/lib/python3.12/site-packages/mlx/nn/utils.py", line 29, in inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/main.py", line 85, in loss_fn
    logits = model(x)
             ^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/src/SVDLinear.py", line 46, in __call__
    return self.out_proj(x)
           ^^^^^^^^^^^^^^^^
  File "/Users/guo/OSS/self-adpat-llm-mlx/src/SVDLinear.py", line 22, in __call__
    new_weight = self.U @ mx.diag(self.S * self.mask) @ self.V.transpose()
                 ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ValueError: [matmul] Last dimension of first input with shape (10000,10000) must match second to last dimension of second input with shape (1024,1024).
